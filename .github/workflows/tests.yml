name: Tests

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
  workflow_dispatch:

jobs:
  coding-standards:
    name: Coding Standards
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer:v2

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run PHPCS
        run: composer phpcs

      - name: Run PHPStan
        run: composer phpstan

  phpunit:
    name: PHPUnit Tests (PHP ${{ matrix.php }}, WP ${{ matrix.wordpress }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: ['7.4', '8.0', '8.1', '8.2', '8.3']
        wordpress: ['6.0', '6.1', '6.2', '6.3', 'latest']
        exclude:
          - php: '7.4'
            wordpress: '6.3'
        include:
          - php: '8.2'
            wordpress: 'latest'
            multisite: true

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_test
          MYSQL_USER: wp
          MYSQL_PASSWORD: wp
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, mysql, mysqli, pdo_mysql, bcmath, soap, intl, gd, exif, iconv
          coverage: xdebug
          tools: composer:v2

      - name: Validate composer.json
        run: composer validate --strict

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Setup WordPress test environment
        run: |
          bash bin/install-wp-tests.sh wordpress_test wp wp 127.0.0.1:3306 ${{ matrix.wordpress }}
        env:
          WP_VERSION: ${{ matrix.wordpress }}

      - name: Run unit tests
        run: composer test:unit
        env:
          WP_TESTS_MULTISITE: ${{ matrix.multisite && '1' || '0' }}

      - name: Run integration tests
        run: composer test:integration
        env:
          WP_TESTS_MULTISITE: ${{ matrix.multisite && '1' || '0' }}

      - name: Generate code coverage
        if: matrix.php == '8.2' && matrix.wordpress == 'latest' && !matrix.multisite
        run: composer test:coverage

      - name: Upload coverage to Codecov
        if: matrix.php == '8.2' && matrix.wordpress == 'latest' && !matrix.multisite
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          fail_ci_if_error: false

  security:
    name: Security Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer:v2

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Security Checker
        uses: symfonycorp/security-checker-action@v5